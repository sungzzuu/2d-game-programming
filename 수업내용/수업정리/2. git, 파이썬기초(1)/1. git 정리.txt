1.

<개념>

Git이란?

버전 관리를 통해 팀 작업을 수월하게 해준다.

 

로컬 저장소와 깃허브 저장소 연결하기

->깃에게 실제 원격 저장소 알려주기

 

<할 수 있는 것들>

설치

 

새로운 저장소 만들기

git init: 새로운 git 저장소 생성

 

저장소 받아오기

로컬 저장소 복제: get clone /로컬/저장소/경로

원격 서버의 저장소를 복제: git clone 사용자명@호스트:/원격/저장소/경로

 

작업의 흐름

작업 디렉토리(실제 파일들) -> 인덱스(준비 영역) -> HEAD(최종 확정본)

 

추가와 확정

인덱스에 추가: git add <파일 이름>

git add *

HEAD에 반영: git commit –m “이번 확정본에 대한 설명”

“”안에는 주석을 단다.

아직 원격 저장소에는 반영되지 않음

 

변경 내용 발행하기

원격 서버에 올리기: git push origin master

원격 서버의 주소를 git에 알려주기: git remote add origin <원격 서버 주소>

 

가지치기

가지를 치다가 master 가지로 돌아와 병합한다.

가지 만들고 갈아타기: git checkout –b 가지 이름

master 가지로 돌아오기: git checkout master

가지 삭제하기: git branch –d 가지 이름

새로 만든 가지를 원격 저장소로 전송: git push origin <가지 이름>

 

갱신과 병합

로컬 저장소를 원격 저장소에 맞춰 갱신: git pull -> 원격 저장소의 변경 내용이 로컬 작업 디렉토리에 받아지고 병합된다.

다른 가지에 있는 변경 내용 현재 가지에 병합: git merge <가지 이름>

충돌 발생 시 충돌 부분을 직접 수정 후 병합이 가능하도록 해야 함

충돌 해결 후 아까의 파일을 병합하라고 알려줄 때: git add <파일 이름>

병합하기 전에 어떻게 바뀌었는지 비교: git diff <원래 가지> <비교 대상 가지>

 

꼬리표 달기

새 버전을 발표할 때마다 꼬리표 달아놓기: git tag 1.0.0 1b2e1d3ff

1.0.0: 새로운 꼬리표 1b2e1d63ff: 확정 본 식별자

확정 본 식별자 얻기: git log

 

로컬 변경 내용 되돌리기

잘못 한 경우 로컬의 변경 내용 되돌리기: git checkout -- <파일 이름>

로컬의 모든 변경 내용과 확정 본 포기 -> 원격 저장소의 최신 이력을 가져오고 로컬 master 가지가 저 이력을 가리키도록: git fetch origin, git reset —hard origin/master

 

<GitHub>

GitHub란?

웹호스팅 서비스

Pull->Pull Request 형식

 

GitHub 계정 만들기

저장소(Repository) 만들기

저장소(Repository) 업데이트 하기

git clone : 저장소 가져오기

git remote : 저장소 URL 설정하기

git status : 현재 저장소의 내용과 로컬 컴퓨터에 있는 내용이 얼마나 다른지 알려줌

git add : 수정된 파일을 저장소에 올릴 준비. commit 명령어로 최종 확정

git push : 수정 사항을 저장소에 실제 반영

git pull : 수정된 정보 불러오기